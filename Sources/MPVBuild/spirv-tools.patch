diff --git a/tools/fuzz/fuzz.cpp b/tools/fuzz/fuzz.cpp
index ca6633a6..07540122 100644
--- a/tools/fuzz/fuzz.cpp
+++ b/tools/fuzz/fuzz.cpp
@@ -43,20 +43,20 @@ enum class FuzzingTarget { kSpirv, kWgsl };
 
 // Check that the std::system function can actually be used.
 bool CheckExecuteCommand() {
-  int res = std::system(nullptr);
-  return res != 0;
+  FILE* fp = popen(nullptr, "r");
+  return fp == NULL;
 }
 
 // Execute a command using the shell.
 // Returns true if and only if the command's exit status was 0.
 bool ExecuteCommand(const std::string& command) {
   errno = 0;
-  int status = std::system(command.c_str());
+  FILE* fp = popen(command.c_str(), "r");
   assert(errno == 0 && "failed to execute command");
   // The result returned by 'system' is implementation-defined, but is
   // usually the case that the returned value is 0 when the command's exit
   // code was 0.  We are assuming that here, and that's all we depend on.
-  return status == 0;
+  return fp != NULL;
 }
 
 // Status and actions to perform after parsing command-line arguments.
diff --git a/tools/reduce/reduce.cpp b/tools/reduce/reduce.cpp
index 37600543..78a281a1 100644
--- a/tools/reduce/reduce.cpp
+++ b/tools/reduce/reduce.cpp
@@ -31,20 +31,20 @@ namespace {
 
 // Check that the std::system function can actually be used.
 bool CheckExecuteCommand() {
-  int res = std::system(nullptr);
-  return res != 0;
+  FILE* fp = popen(nullptr, "r");
+  return fp == NULL;
 }
 
 // Execute a command using the shell.
 // Returns true if and only if the command's exit status was 0.
 bool ExecuteCommand(const std::string& command) {
   errno = 0;
-  int status = std::system(command.c_str());
+  FILE* fp = popen(command.c_str(), "r");
   assert(errno == 0 && "failed to execute command");
   // The result returned by 'system' is implementation-defined, but is
   // usually the case that the returned value is 0 when the command's exit
   // code was 0.  We are assuming that here, and that's all we depend on.
-  return status == 0;
+  return fp != NULL;
 }
 
 // Status and actions to perform after parsing command-line arguments.
